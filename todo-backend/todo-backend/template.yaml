AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-back-end

  Sample SAM Template for todo-back-end

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Layers:
      - !Ref UtilsLayer
      - !Ref DataBase
  Api:
    Auth:
      ApiKeyRequired: true
      UsagePlan:
        CreateUsagePlan: PER_API
    Cors:
      AllowHeaders: "'Content-Type,Authorization,X-Api-Key'"
      AllowOrigin: "'*'"
      AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"

Resources:
  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/todo_get
      Handler: handler.lambda_handler
      Runtime: python3.8
      Timeout: 10
      Events:
        GetTodos:
          Type: Api
          Properties:
            Path: /todos
            Method: get

  CorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cors
      Handler: preflight_response.lambda_handler
      Runtime: python3.8
      Events:
        Preflight:
          Type: Api
          Properties:
            Path: /todos
            Method: options
            Auth:
              ApiKeyRequired: false

  PostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/todo_post
      Handler: handler.lambda_handler
      Runtime: python3.8
      Events:
        PostTodos:
          Type: Api
          Properties:
            Path: /todos
            Method: post

  IdDeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/todo_id_delete
      Handler: handler.lambda_handler
      Runtime: python3.8
      Events:
        PostTodos:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: delete

  IdGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/todo_id_get
      Handler: handler.lambda_handler
      Runtime: python3.8
      Events:
        PostTodos:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: get

  IdPachFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/todo_id_pach
      Handler: handler.lambda_handler
      Runtime: python3.8
      Events:
        PostTodos:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: patch

  CorsIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cors
      Handler: preflight_response.lambda_handler
      Runtime: python3.8
      Events:
        Preflight:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: options
            Auth:
              ApiKeyRequired: false

  UtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Common shared code
      ContentUri: layers/utils_layer
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: makefile

  DataBase:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: Common shared code
      ContentUri: layers/data_base
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: makefile

Outputs:
  TodoApi:
    Description: "API Gateway endpoint URL for Prod stage for TODO app"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos"

